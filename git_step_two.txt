# Branching (creating. switching , merging and deleting)
# Tagging/Releasing
# Git Logs

Steps:
1. creating new branch from develop branch call it something like feature/something
2. work on feature, committing to this feature branch
3. test your feature
4. merge your feature branch into develop
5. delete your feature branch
6. once features are finished/bug fixed, prepare your release
7. when released is tested and prepped merge develop into master
8. tag ,aster branch commit with release number
9. repeat

----------------------------------------------------------------------------------

Add A Tag [ Tag a marks the last commit as a production commit with a tag.]
---------
    1. git tag -a v1.0 -m "added first tag"     //creates a tag
    2. git show v1.0    //shows tag information, files and other things.
    3. git tag      //shows tag name
    4. git push --tags origin main     // to add tag to remote repo
NOTE: -a is annotated

------------------------------------------------------------------------------------

Check git logs
--------------
    1. git logs //print all the information about the git commit and user
    
    or

    2. git log --oneline --decorate --graph --all
        in linux put it as alias glog

-------------------------------------------------------------------------------------

Create A Branch
---------------
# main contains only production release
    1. git branch develop   //create a develop branch
    2. git branch       //shows all the branches
    3. git checkout develop     //to switch to develop branch
    4.git branch -d <branch name>     //delete the branch

--------------------------------------------------------------------------------------

Practical Example [ create develop remote repo and merge with master ] :
    1. after creation of develop
    2. edit a files
    3. git add <file name>
    4. git commit -m "message"
    5. git push -u origin develop       //adds develop branch as remote repo

---------------------------------------------------------------------------------------

Create a Feature Branch
-----------------------
    1. git branch feature1
    2. git status       //working tree should be clean
    3. git checkout feature1
    4. //Update files in feature1
    5. git add <file names>
    6. git commit -m " message"     //git commit to feature1 branch locally
    7. git push -u origin feature1

----------------------------------------------------------------------------------------------------------------------------
Merge feature1 to develop
-------------------------
    1. git checkout develop
    2. git merge feature1       //feature1 is merged to develop branch
    3. git branch -d feature1   // after feature1 is completed delete feature1 branch
    4. git push origin develop
---------------------------------------------------------------------------------------------------------------------------

merge develop to master
-----------------------
    1. git checkout main
    2. git merge develop
    3. git push origin main
    
------------------------------------------------------------------------------------------------------------------------------

If main is updated but develop branch is outdated. Want to update from main.
----------------------------------------------------------------------------
    1.  git checkout develop
    2.  git pull origin main

----------------------------------------------------------------------------------------------------------------------------

NOTE: After merging psuh the changes.

project structure contains .gitignore, LICENSE, README.md
