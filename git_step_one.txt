1.crlf is used for line spacings
    For windows
        $ git config --global core.autocrlf true
        $ git config --global core.safecrlf true    

    For linux
        $ git config --global core.autocrlf input
        $ git config --global core.safecrlf true   
        $ git config --global color.ui true
        $ git config --global core.editor emacs         

2. cat ~/.gitconfig
    To check git configuration file.

3. Add username and useremail
    git config [--global] user.name "Full Name"
    git config [--global] user.email "email@address.com"

4. Adding coloring for changes
   vi ~/.gitconfig

   Add these lines at the end
    [color]
        diff = auto
        status = auto
        branch = auto
        interactive = auto
        ui = true
        pager = true
    [color "status"]
        added = green
        changed = red bold
        untracked = magenta bold

    [color "branch"]
        remote = yellow     
-----------------------------------------------------------------------------------------


Set git ssh-key keys:
---------------------

1.  $ ssh-keygen -t rsa -C "your_email@example.com"
    Press enter and add passphrase
2.  $ cat ~/.ssh/id_rsa.pub
    copy the ouput
3. github.com -> setting -> SSH and GPG keys --> add title and paste output from above command to "key"
4. To verify -> ssh -T git@github.com

------------------------------------------------------------------------------------------

create a repo
-------------

1. github --> + button -> new repo [add repo name and description. Click create repo]

------------------------------------------------------------------------------------------------

How to clone
-----------
    CLONE USING GIT URL
    -------------------
        1.  git clone <git clone url> <inside folder name>
            create a folder containing git repo 
    
    CREATE A REPO USING COMMAND LINE
    -------------------------------
        1. git init
        2.git add README.md
        3.git commit -m "first commit"
        4.git branch -M main
        5.git remote add origin https://github.com/lakshyasharma27/gitcommand.git
            origin is default name for link repo
 
        6.git push -u origin main

NOTE: git add file1 file2 .......

--------------------------------------------------------------------------------------------------------------

How to Add new file
-------------------
    1. create a file 
    2. git status   //shows details of new files(tracked and untracked)
    3. git add <file name>
    4. git commit -m "message"
    5. git push -u origin main

Note: git commit helps in tracing the logs of commits. We can move back. Works locally

---------------------------------------------------------------------------------------------------------------

File updated or created on remote repo. 
---------------------------------------
    1. git pull origin main     //shows fast forwarding and update the local repo.
NOTE: you made no change in same file updated or created in remote repo

-----------------------------------------------------------------------------------------------------------------

How to Add and remove remote repo
--------------------------------------
1. git remote add origin <git url>
    adds remote repo
2. git remote -v
    to check the remote repo added
3. git remote remove <repo name> 
    to remove a repo
------------------------------------------------------------------------------------------

